#
# List all worlds that should be treated as HothGenerator worlds.
#
# Example configuration:
#
# hothworlds:
#   - hoth
#   - myiceworld
#
hothworlds:
   - hoth
#
# You can specify world specific settings for each hoth world here. 
#
#   type: [hoth|tatooine]   - world type
#                               hoth = frozen world
#                               tatooine = desert world
#
# Example configuration:
#
#hothworldsdata:
#  hoth:
#    type: hoth
#  tatooine:
#    type: tatooine
#  dagobah:
#    type: dagobah
#
# --- Advanced options ---
#
#  There's no need to change anything of the following unless there's
#  some game mechanics you really want to change. If you want to play
#  the hoth world as the author intended, just leave the following as is.
#
# If you should mess up the config then just stop the server, remove the
# config file and then start the server again.
#
# Option descriptions:
#
#  debug - true/false. Will print some debug info into the console if set to
#          true.
#
#  iteminfotool - true/false. If true then right clicking a block with a clay
#                 ball will print some data about that block.
#
#  smoothsnow - true/false. Set to false to turn off the smooth snow cover.
#
#  world.surfaceoffset - 0 or a positive value. Offsets the surface upward
#                        from the default of 64 by adding more stone layers.
#
#  structure.spikes.rarity - 0-10. Rarity for spikes. 0 is off, 1-10 is
#                             rarity (1 = common, 10 = very rare)
#  structure.gardens.rarity - 0-10. Rarity for gardens. 0 is off, 1-10 is
#                             rarity (1 = common, 10 = very rare)
#  structure.domes.rarity - 0-10. Rarity for domes. 0 is off, 1-10 is rarity
#                    (1 = common, 10 = very rare)
#  structure.domes.plantstem - Block ID for alien plant stems
#  structure.domes.planttop  - Block ID for alien plant top
#  structure.domes.floor - Block ID for dome floor material
#  structure.domes.placeminidome - true/false. Whether the central building
#                                  should be generated.
#  structure.domes.floorrandom - Block ID for the random floor material
#  structure.bases.rarity - 0-10. Rarity for bases. 0 is off, 1-10 is rarity
#                    (1 = common, 10 = very rare)
#  structure.bases.spawner - true/false. Whether bases can have monster
#                            spawners
#  structure.mazes.rarity - 0-10. Rarity for room clusters. 0 is off, 1-10 is
#                          rarity (1 = common, 10 = very rare)
#  structure.mazes.minrooms - 1-99. Minimum number of rooms the
#                                   generator attempts to make
#  structure.mazes.maxrooms - 1-99. Maximum number of rooms the
#                                   generator attempts to make
#  structure.mazes.spawner - true/false. Whether bases can have monster
#                                  spawners
#  structure.skeletons.rarity  - 0-10. Rarity for skeletons. 0 is off, 1-10 is
#                                rarity (1 = rare, 10 = very common)
#  structure.oasis.rarity  - 0-10. Rarity for oasises. 0 is off, 1-10 is
#                                rarity (1 = rare, 10 = very common)
#  structure.sandcastle.rarity  - 0-10. Rarity for sandcastless. 0 is off, 1-10
#                                is rarity (1 = rare, 10 = very common)
#  structure.village.rarity  - 0-10. Rarity for villages. 0 is off, 1-10 is
#                                rarity (1 = rare, 10 = very common)
#  generate.logs - true/false. Whether frozen logs should be generated
#  generate.caves.rarity - 0-10. Rarity for caves. 0 is off, 1-10 is rarity
#                   (1 = rare, 10 = very common)
#  generate.ores - true/false. Whether frozen logs should be generated
#  generate.extendedore - true/false. If true then ores can use type id's>255
#                         and its data value can be set.
#                         Warning: Extended ores are much slower to generate.
#  rules.dropice - true/false. Whether ice should drop ice blocks when
#                  destroyed. 
#  rules.droppackedice - true/false. Whether packed ice should drop packed ice
#                        blocks when destroyed. 
#  rules.dropsnow - true/false. Whether snow should drop snow blocks when
#                   destroyed. 
#  rules.freezewater - true/false. Whether water should freeze when placed
#                      above stone layer. 
#  rules.freezelava - true/false. Whether lava should freeze when placed above
#                     stone layer. 
#  rules.plantsgrow - true/false. Whether plants and trees can grow under open
#                     sky. 
#  rules.grassspread - true/false. Whether grass can spread under open sky. 
#  rules.stopmelt - true/false. Whether ice and snow should be able to melt
#                   above stone layer. 
#  rules.limitslime - true/false. Whether slime can only spawn in the stone
#                     layer. 
#  rules.snowgravity - true/false. Whether gravity is applied to snow blocks.
#  rules.environment.period - Positive integer value. Seconds between
#                        environment damage checks. 0 = no damage (global off)
#  rules.freeze.damage - Positive integer value. Damage taken when freezing.
#                        0 = no damage
#  rules.freeze.stormdamage - Positive integer value. Extra damage taken
#                             during storms. 0 = no damage
#  rules.freeze.message - Message sent when freezing
#  rules.heat.damage - Positive integer value. Damage taken when overheated.
#                        0 = no damage
#  rules.heat.message1 - Message sent when moving into water
#  rules.heat.message2 - Message sent when getting thirsty
#  rules.heat.message3 - Message sent when very thirsty
#  rules.heat.message4 - Message sent when taking heat damage
#  rules.spawn.neutral.on - true/false. turn on or off the hothgenerator's own
#                           neutral mob spawning.
#  rules.spawn.neutral.rarity - Rarity of neutral mob spawns 1-10 
#  rules.spawn.neutral.mobs - Comma separated list of which neutral mobs to
#                             spawn.
#                             Currently supported neutral mobs:
#                              chicken,cow,mushroom_cow,ocelot,pig,sheep,wolf,
#                              horse
hoth:
  debug: false
  iteminfotool: false
  smoothsnow: true
  world.surfaceoffset: 0
  structure.spikes.rarity: 2
  structure.gardens.rarity: 2
  structure.domes.rarity: 3
  structure.domes.plantstem: 19
  structure.domes.planttop: 89
  structure.domes.floor: 3
  structure.domes.floorrandom: 89
  structure.domes.placeminidome: true
  structure.bases.rarity: 2
  structure.bases.spawner: true
  structure.mazes.rarity: 2
  structure.mazes.minrooms: 8
  structure.mazes.maxrooms: 32
  structure.mazes.spawner: true
  structure.skeletons.rarity: 2
  structure.oasis.rarity: 2
  structure.sandcastle.rarity: 2
  structure.village.rarity: 2
  structure.supergarden.rarity: 2
  generate.logs: true
  generate.caves.rarity: 2
  generate.ores: true
  generate.extendedore: false
  generate.cactuses: true
  generate.shrubs: true
  rules.dropice: true
  rules.droppackedice: true
  rules.dropsnow: true
  rules.freezewater: true
  rules.freezelava: true
  rules.plantsgrow: false
  rules.grassspread: false
  rules.stopmelt: true
  rules.limitslime: true
  rules.snowgravity: false
  rules.environment.period: 0
  rules.freeze.damage: 2
  rules.freeze.stormdamage: 1
  rules.freeze.message: "&bYou are freezing. Find shelter!"
  rules.heat.damage: 2
  rules.heat.message1: "&6The water removes your thirst."
  rules.heat.message2: "&6Your are starting to feel thirsty."
  rules.heat.message3: "&6Your feel very thirsty."
  rules.heat.message4: "&6You are exhausted from the heat. Find water or shelter!"
  rules.spawn.neutral.on: true
  rules.spawn.neutral.rarity: 2
  rules.spawn.neutral.mobs: chicken,cow,mushroom_cow,ocelot,pig,sheep,wolf,horse
